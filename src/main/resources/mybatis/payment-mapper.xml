<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="flab.commercemarket.domain.payment.mapper.PaymentMapper">

    <resultMap id="paymentResultMap" type="flab.commercemarket.domain.payment.vo.Payment">
        <id property="id" column="id"/>

    </resultMap>

    <insert id="insertPrepareRequestData" parameterType="flab.commercemarket.domain.payment.vo.Payment" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO payment(
            merchant_uid, amount, status
        )
        VALUES(
           #{merchantUid}, #{amount}, #{status}
       )
    </insert>

    <select id="findById" parameterType="long" resultMap="paymentResultMap">
        SELECT * FROM payment WHERE id = #{id}
    </select>

    <select id="findByMerchantUid" parameterType="String" resultMap="paymentResultMap">
        SELECT * FROM payment WHERE merchant_uid = #{merchantUid}
    </select>

    <select id="findByUsername" resultMap="paymentResultMap">
        SELECT * FROM payment
        WHERE buyer_name = #{username}
        LIMIT #{offset}, #{limit}
    </select>

    <select id="countByUsername" resultType="int">
        SELECT COUNT(*) FROM payment where buyer_name = #{buyerName}
    </select>

    <select id="isAlreadyExistentMerchantUid" resultType="boolean">
        SELECT EXISTS(
                       SELECT 1 FROM payment
                       WHERE merchant_uid = #{merchantUid}
                   ) AS exist
    </select>

    <update id="updateCompletePayment">
        UPDATE payment
        SET
            imp_uid = #{payment.impUid},
            pay_method = #{payment.payMethod},
            status = #{payment.status},
            paid_at = #{payment.paidAt},
            receipt_url = #{payment.receiptUrl},
            pg_provider = #{payment.pgProvider},
            buyer_name = #{payment.buyerName},
            success = #{payment.success}
        WHERE
            id = #{id}
    </update>

    <update id="updateCancelPayment">
        UPDATE payment
        SET
            imp_uid = #{payment.impUid},
            pay_method = #{payment.payMethod},
            status = #{payment.status},
            paid_at = #{payment.paidAt},
            fail_at = #{payment.failAt},
            canceled_at = #{payment.canceledAt},
            receipt_url = #{payment.receiptUrl},
            pg_provider = #{payment.pgProvider},
            buyer_name = #{payment.buyerName},
            success = #{payment.success}
        WHERE
            id = #{id}
    </update>
</mapper>